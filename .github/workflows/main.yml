name: CTEM Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: write
  security-events: write

jobs:
  ctem-scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install GitLeaks
        run: |
          curl -sSL https://github.com/gitleaks/gitleaks/releases/latest/download/gitleaks-linux-amd64 -o gitleaks
          chmod +x gitleaks
          sudo mv gitleaks /usr/local/bin/

      - name: Run GitLeaks scan
        run: |
          mkdir -p reports
          gitleaks detect --source . --report-format sarif --report-path reports/results.sarif || true

      - name: Upload GitLeaks SARIF (if exists)
        if: ${{ always() && hashFiles('reports/results.sarif') != '' }}
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: reports/results.sarif

      - name: Install Trivy
        run: |
          sudo apt-get update
          sudo apt-get install -y wget apt-transport-https gnupg lsb-release
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo gpg --dearmor -o /usr/share/keyrings/trivy.gpg
          echo "deb [signed-by=/usr/share/keyrings/trivy.gpg] https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install -y trivy

      - name: Run Trivy scan
        run: |
          mkdir -p reports
          trivy fs . --format json --output reports/trivy-results.json --exit-code 0

      - name: Run memory tracker
        run: python scripts/memory_tracker.py

      - name: Upload data.json
        uses: actions/upload-artifact@v4
        with:
          name: dashboard-data
          path: data.json

  deploy-dashboard:
    needs: ctem-scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Copy dashboard to publish directory
        run: |
          mkdir -p public
          cp data.json public/
          cp index.html public/

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
